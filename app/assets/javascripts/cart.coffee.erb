

$(document).ready ->

#  =========================
# validate form for basket
#  =========================
  $('#basket-information-form').validate()
#    onfocusout: (element) ->
#      if $(element).valid()
#        $(element).removeClass('input-error').addClass 'input-valid'
#      return
#    invalidHandler: (event, validator) ->
#      $.each validator.errorList, (index, error) ->
#        $(error.element).addClass 'input-error'
#        return
#      return
#    showErrors: ->
#      #This function is kept blank so as to hide the default validation messages.
#      return

#  =========================
# login form from basket
#  =========================
  $('p.esb-closed span').click ->
    $wrap = $(@).closest('.enter-in-system-from-basket-wrap')
    $form = $wrap.find('form')

    $form.show()
    $('p.esb-button').removeClass('esb-closed')

  $('.esb-button-close').click ->
    $wrap = $(@).closest('.enter-in-system-from-basket-wrap')
    $form = $wrap.find('form')

    $form.hide()
    $('p.esb-button').addClass('esb-closed')

  $('#basket-information-form input').keyup ->
    if $('#basket-information-form').valid()
      $('.check-validate-status-button').hide()
#  =========================
# cart validation got ot finish step
#  =========================


  $('.check-validate-status-button').click ->
    $wrap = $(@).closest('.basket-modal-wrap')
    $form = $wrap.find('form')

    $address = $form.find("input[name='street-address']").val()
    $phone = $form.find("input[name='phone']").val()
    $email = $form.find("input[name='email']").val()

    if $('#basket-information-form').valid()
      console.log('validated')
#    else
#      alert 'not valid'


#    if $address.length > 0 && $phone.length > 0 && $email.length > 0
#      $(@).hide()
#    else
#      alert 'no valid'

#  =========================
# callback handler for form submit
#  =========================
  $('form.order-form').submit (e) ->
    $this = $(@)
    $form = $this.closest('form')
    product_id = +$form.find('[name=product_id]').val()

    quantity = +$form.find('[name=quantity]').val()
#    alert 'quantity'+quantity
#    $sum = Number.parseInt($('.basket-inner .count-wrap span').text())
    $sum = +$('.basket-inner .count-wrap span').text()
    $total_price = +$this.find('.basket-total-price-wrap h4 b').text()
    console.log('total_price'+$total_price)

    postData = $(this).serializeArray()
    formURL = $(this).attr('action')

    $wrap =$(@).closest('.one-product-wrap')
    $status_adding = $wrap.find('.price-wrap')

    $.ajax
      url: formURL
      dataType: 'json'
      type: "POST"
      data: postData
      beforeSend: ->
        $status_adding.addClass('y-sending')

      success: (data) ->
        $cart_items_wrap = $('.cart-items-wrap')
        if data.added_to_existing
          $cart_items_wrap.children().filter("[data-product-id=#{product_id}]").find('input.one-item-quantity').val(data.quantity)
        else
          $item = data['item_template']
          $('.cart-items-wrap').append($item)
          $sum = $sum + quantity

        setTimeout (->
          $status_adding.removeClass('y-sending')
          $status_adding.addClass('y-success')
        ), 2000
        count = $cart_items_wrap.children().length
        $sum = $sum + quantity
        $('.basket-inner .count-wrap span, .basket-total-price-wrap h4 span').text($sum)
        $('.basket-total-price-wrap h4 b').text()
#        $('.basket-total-price-wrap h4 span').text()

      complete: ->

        setTimeout (->
          $status_adding.removeClass('y-success')
        ), 4000

      error: ->
        setTimeout (->
          $status_adding.removeClass('y-sending')
          $status_adding.addClass('y-error')
        ), 2000

    e.preventDefault()

  $('form.delete-product').submit (e) ->

    formURL = $(@).attr('action')

    $item = $(@).closest('.one-item')

    $.ajax
      url: "#{formURL}.json"
      type: 'delete'
      dataType: 'json'
      beforeSend: ->
#        alert 'begin deleting...'
      success: ->
#        alert 'succesfull!'
        $item.remove()
      e.preventDefault()


# ==================================
# counter for cart
# ==================================
  $('.cart-items-wrap .one-item .ic-button').click ->
    $this = $(@)
    $wrap = $this.closest('.basket-modal-wrap')
    total_count = +$wrap.find('.basket-total-price-wrap h4 span').text()

    $total_price_i = $('.basket-total-price-wrap h4 b')
    $total_price_d = $('.basket-total-price-wrap h4 b sup')

    $item_wrap = $this.closest('.one-item')
    $items_price_i = $item_wrap.find('.cart-item-price-wrap strong')
    $items_price_d = $item_wrap.find('.cart-item-price-wrap strong sup')

    one_item_price = $item_wrap.attr "data-product-price"
    quantity = +$item_wrap.find('[name=quantity]').val()

    if $(@).hasClass('input-count-up')
      quantity++
      console.log(quantity)
      console.log(one_item_price)
      one_item_price = one_item_price * quantity
      console.log(one_item_price)
      $items_price_i.html(one_item_price+"<span>грн</span>")
      $('.basket-total-price-wrap h4 span').text(total_count+1)
      console.log('up')

    else if $(@).hasClass('input-count-down')
      if $item_wrap.find('[name=quantity]').val()>1
        $('.basket-total-price-wrap h4 span').text(total_count-1)
        console.log('down')

# ===========================================
# clear form
# ===========================================
  $('a.clear-form').click ->
    $(@).closest('form').find("input, textarea").val("")



#  $('div.basket-wrap > a').click (e) ->
#
#    # render content
#
#
#    # Button which will activate our modal
#    $('#BasketModal').foundation('reveal', 'open')
##    .reveal
##      animation: 'fade'
##      animationspeed: 600
##      closeonbackgroundclick: true
##      dismissmodalclass: 'close'


